apiVersion: apps/v1
kind: Deployment
metadata:
  name: terminator-api
spec:
  replicas: 1
  template:
    spec:
      containers:
        - name: terminator-api
          imagePullPolicy: Always
          image: registry.digitalocean.com/unmanaged-registry/terminator-api:latest
          command: ["/bin/sh", "-c"]
          args:
            # This should be fixed by running migrations before we deploy the container
            - "npm run db:migration:run && npm run start"
          ports:
            - containerPort: 3000
          env:
            - name: "ENV"
              value: "PROD"
            - name: "NODE_ENV"
              value: "production"
            - name: mailgun_api_key
              valueFrom:
                secretKeyRef:
                  name: secrets
                  key: mailgun_api_key
            - name: postgres_password
              valueFrom:
                secretKeyRef:
                  name: secrets
                  key: postgres_password

---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
      nginx.ingress.kubernetes.io/use-regex: "true"
  name: terminator-api-ingress
spec:
  rules:
    - host: terminator.dev.hobby-paas.cf
      http:
        paths:
         - path: /api/*
           backend:
              serviceName: terminator-api
              servicePort: 8005      
    - host: terminator.berlin
      http:
        paths:
         - path: /api/*
           backend:
              serviceName: terminator-api
              servicePort: 8005              
---
apiVersion: v1
kind: Service
metadata:
  name: terminator-api
spec:
  ports:
    - name: http
      port: 8005
      targetPort: 3000
  selector:
    app: terminator-api
  type: NodePort
